
#user  nobody;
user root yuzhengtian;
worker_processes  1;

error_log  /home/yuzhengtian/project/hqmovie/logs/error.log info;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

#rtmp {
#	server {
#    	#监听的端口
#    	listen 1935;
#    	# RTMP 直播流配置
#   		application rtmplive {
#        	live on;
#       		#为 rtmp 引擎设置最大连接数。默认为 off
#        	max_connections 1024;
#    	}
#    	# HLS 直播流配置
#    	application hls{
#        	live on;
#        	hls on;
#      		hls_path /home/yuzhengtian/project/hqmovie/hls;  #这里的路径切片需要保存的路径
#        	hls_fragment 1s;
#    	}
#	}
#}

http {
	client_max_body_size 500M;
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /home/yuzhengtian/project/hqmovie/logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	#server{
	#	listen 8080;
	#	root /home/yuzhengtian/project/hqmovie/;
	#	location /hls {
    #		# Serve HLS fragments
   	# 		types {
    #   			application/vnd.apple.mpegurl m3u8;
    #    		video/mp2t ts;
    #		}
    #		#add_header Cache-Controll no-cache;
    #		expires -1;
	#	}
	#	#rtmp 在rtmp://127.0.0.1:1935/rtmplive/home
	#	location / {
	#		index html/vedio.html;
	#		header_filter_by_lua 'ngx.header.Server = "192.168.1.18"';  	
	#	}

	#}

    server {
        listen       9090;
        server_name  localhost;
		index html/index.html;
		root /home/yuzhengtian/project/hqmovie/;



        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
		location / {
			index html/index.html;
			header_filter_by_lua 'ngx.header.Server = "192.168.1.18"';  	
		}
		location /home/ {
			root /home/yuzhengtian/project/hqmovie/html/;
			header_filter_by_lua 'ngx.header.Server = "192.168.1.18"';  	
		}
		location /images/ {
			root /home/yuzhengtian/project/hqmovie/html/;
			header_filter_by_lua 'ngx.header.Server = "192.168.1.18"';  	
		}
		location /login_out/ {
			header_filter_by_lua '
					ngx.header.Server = "192.168.1.18";
					ngx.header.Cookie = "";
				';  	
			rewrite /login_out / break;
 		}
        location = /50x.html {
            root   html;
        }
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
